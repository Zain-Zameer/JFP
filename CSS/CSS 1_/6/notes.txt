Cascade algorithm in CSS:
4 hard rules in this algorithm which are,
1. Position and order of appearance: the order in which your CSS rules appear
2. Specificity: an algorithm that determines which CSS selector has the strongest match
3. Origin: the order in which CSS appears and where it comes from, whether that is a browser style, CSS from a browser extension, or your authored CSS
4. Importance: some CSS rules are weighted more heavily than others, especially with the !important rule type

agr same selectors hein toh latest wale ko dekha jayega 
but if i add lets say 3 same selectors but one different selector then Specificity calculate ki jayegi har selector ki then jiski high hogi that selector gon win.
following is the order of Specificity:
Inline Style > ID Selector > Class or Attribute Selector > Element Selector > Universal Selector


but wait? what is attribute selector:
    <h2 okasha="x">Hello World</h2>
now here is how im going to apply CSS:
    [okasha=x]{
        background-color: red;
    }

there is another thing called "user agent stylesheet" joh stylesheet browser khud lagata hai.

how can i overwrite inline css? just use !important 


and here are the points of each selector:
To calculate specificity, assign a value to each part of the selector:
Universal Selector: 0
Element selectors and pseudo-elements: 1
Class selectors, attribute selectors, and pseudo-classes: 10
ID selectors: 100
Inline styles: 1000


quick quiz : calculate specificity
a.harryclass.rohan-class[href]:hover {
  color: red;
}